package com.hacker.mail;

import javax.sql.DataSource;

import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobExecutionListener;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;
import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.batch.core.launch.support.RunIdIncrementer;
import org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider;
import org.springframework.batch.item.database.JdbcBatchItemWriter;
import org.springframework.batch.item.database.builder.JdbcBatchItemWriterBuilder;
import org.springframework.batch.item.file.FlatFileItemReader;
import org.springframework.batch.item.file.builder.FlatFileItemReaderBuilder;
import org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;
import org.springframework.batch.item.file.mapping.DefaultLineMapper;
import org.springframework.batch.item.file.transform.DelimitedLineTokenizer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.ClassPathResource;
import org.springframework.jdbc.core.JdbcTemplate;

@Configuration
@EnableBatchProcessing
public class BatchConfiguration {

    @Autowired
    public JobBuilderFactory jobBuilderFactory;

    @Autowired
    public StepBuilderFactory stepBuilderFactory;

    // tag::readerwriterprocessor[]
    @Bean
    public FlatFileItemReader<Event> reader() {
        return new FlatFileItemReaderBuilder<Event>()
            .name("personItemReader")
            .resource(new ClassPathResource("sampleData.csv"))
            .delimited()
            .names(new String[]{"firstname","lastname"})
            .fieldSetMapper(new BeanWrapperFieldSetMapper<Event>() {{
                setTargetType(Event.class);
            }})
            .build();
    }


   
    // end::readerwriterprocessor[]

    // tag::jobstep[]
   

    @Bean
    public Step step1(JdbcBatchItemWriter<Event> writer) {
        return stepBuilderFactory.get("step1")
            .<Event, Event> chunk(10)
            .reader(reader())
            
            .build();
    }
    // end::jobstep[]
}