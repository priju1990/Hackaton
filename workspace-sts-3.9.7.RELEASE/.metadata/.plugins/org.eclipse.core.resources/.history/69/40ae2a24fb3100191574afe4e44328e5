package com.hacker.mail;

import javax.persistence.EntityManagerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.CrudRepository;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
public class AdminController  { 
	 @Autowired
	private AdminRepository adminRepository;
	 @Autowired
	   EntityManagerFactory emf ;
	   @CrossOrigin(origins = "http://localhost:3000", maxAge = 3600)
	    @RequestMapping(value="/createRole", method = RequestMethod.POST, consumes=MediaType.APPLICATION_JSON_VALUE)
	    public ResponseEntity<String> createUser(@RequestBody Admin role) {
		  
		   Admin admin = new Admin();
	    	
	    	admin.setEmpID(role.empID);
	    	admin.setName(role.name);
	    	admin.setPhoneNum(role.phoneNum);
	    	admin.setRole(role.role);
	    	admin.setPwd(Integer.toString(role.empID)+"@cts");
	    	admin.setEventid(role.eventid);
	    	
	       System.out.println("COming to springg"+admin.phoneNum);
	       adminRepository.save(admin);
	        return ResponseEntity.ok().build();
	    }
	   @CrossOrigin(origins = "http://localhost:3000", maxAge = 3600)
	    @RequestMapping(value="/createRole", method = RequestMethod.POST, consumes=MediaType.APPLICATION_JSON_VALUE)
	    public ResponseEntity<String> createEvent(@RequestBody Event event) {
		  
		   Admin admin = new Admin();
	    	
	    	admin.setID(event.ID);
	    	admin.setName(event.name);
	    	admin.setPhoneNum(event.phoneNum);
	    	admin.setRole(event.role);
	    	admin.setPwd(Integer.toString(event.empID)+"@cts");
	    	admin.setEventid(role.eventid);
	    	
	       System.out.println("COming to springg"+admin.phoneNum);
	       adminRepository.save(admin);
	        return ResponseEntity.ok().build();
	    }

}
